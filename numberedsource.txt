

2012-03-02 19:02               src/thegui/Run.java                Page 1


    1	package thegui;
    2	
    3	import java.io.IOException;
    4	
    5	
    6	/**
    7	 *
    8	 * @author Aki Stankoski and Dennis Huynh
    9	 */
   10	public class Run{
   11	public static void main(String[] args) throws IOException {
   12	TheGUI a = new TheGUI();
   13	a.setUpHomeScreen();
   14	}
   15	}
















































2012-03-14 19:08              src/thegui/TheGUI.java              Page 1


    1	package thegui;
    2	import java.awt.*;
    3	import java.awt.BorderLayout;
    4	import java.awt.Color;
    5	import java.awt.event.ActionEvent;
    6	import java.awt.event.ActionListener;
    7	import java.awt.image.BufferedImage;
    8	import java.io.File;
    9	import java.io.IOException;
   10	import java.util.logging.Level;
   11	import java.util.logging.Logger;
   12	import javax.imageio.ImageIO;
   13	import javax.swing.*;
   14	import java.awt.Dimension;
   15	
   16	/**
   17	 *
   18	 * @author Aki Stankoski and Dennis Huynh
   19	 */
   20	
   21	public class TheGUI{
   22	 	//declare the panels and buttons to be accessed from multiple methods  
   23		JFrame frame        =      new JFrame("UCSB Campus Map");//main frame
   24		JPanel thePanel     =      new JPanel();//Back homescreen panel
   25		JPanel newPanel     =      new JPanel();// New panel when button is clicked
   26		JPanel leftPanel    =      new JPanel();//Left homescreen panel
   27		JPanel rightPanel   =      new JPanel();//Right homescreen panel
   28		JPanel bottomPanel  =      new JPanel();//Bottom subpanels
   29		JPanel topPanel     =      new JPanel();//Top subpanels
   30	        JPanel infoPanel    =      new JPanel();//info panel on subpanels
   31		JButton T387        =      new JButton("387");
   32		JButton T429        =      new JButton("429");
   33		JButton BRDA        =      new JButton("BRDA");
   34		JButton BSIF        =      new JButton("BSIF");
   35		JButton GIRV	    =	   new JButton("GIRV");
   36		JButton HSSB	    =      new JButton("HSSB");
   37		JButton HFH 	    =      new JButton("HFH");
   38		JButton KERR	    =      new JButton("KERR");
   39		JButton LLCH        =      new JButton("LLCH");
   40		JButton PHELP       =      new JButton("PHELP");
   41		JButton cancel      =      new JButton("Cancel");//cancel button for subscreens
   42		JLabel T387Label    =      new JLabel("387 - Trailer 387");
   43		JLabel T429Label    =      new JLabel("429 - Trailer 429");
   44		JLabel BRDALabel    =      new JLabel("BRDA - Broida Hall");
   45		JLabel BSIFLabel    =      new JLabel("BSIF - Biological Sciences Instruction Facility");
   46		JLabel GIRVLabel    =      new JLabel("GIRV - Girvetz Hall");
   47		JLabel HSSBLabel    =      new JLabel("HSSB - Humanities and Social Sciences Building");
   48		JLabel HFHLabel     =      new JLabel("HFH - Harold Frank Hall");
   49		JLabel KERRLabel    =      new JLabel("KERR - Kerr Hall");
   50		JLabel LLCHLabel    =      new JLabel("LLCH - Lotte-Lehmann Concert Hall");
   51		JLabel PHELPLabel   =      new JLabel("PHELP - Phelps Hall");
   52	
   53	
   54	        //building information
   55	        String T387Info = 
   56	            "1 Start by making your way towards the University Center.\n"







2012-03-14 19:08              src/thegui/TheGUI.java              Page 2


   57	            +"\n"        
   58	            +"2 Once you get to the University Center make a left.\n"                           
   59	            +"\n" 
   60	            +"3 Coninue walking straight until you get to the bike path. "
   61	            +"Cross the bike path and cross the parking lot.\n"
   62	            +"\n" 
   63	            +"4 Trailer 387 will be the building parallel to the parking"
   64	            + "lot on the right side of the parking lot.";
   65	        
   66	        String T429Info = 
   67	            "1 Start by making your way towards the University Center.\n"
   68	            +"\n"
   69	            +"2 Once you get to the University Center make a left.\n"
   70	            +"\n"   
   71	            +"3 Coninue walking straight until you get to the bike path. "
   72	            +"Cross the bike path and cross the parking lot.\n"
   73	            +"\n"
   74	            +"4 Trailer 429 will be the building in the middle of three "
   75	            + "similar looking buildings. It is an older brown building.\n";
   76	
   77	        String BRDAInfo = 
   78	            "1 Start out by walking away from the University Center towards "
   79	            +"the Women's Center. Cross the bikepath and get on the sidewalk.\n"
   80	            +"\n"
   81	            +"2 When you get to the sidewalk, turn right and keep going until "
   82	            +"you have the library in front of you and a red metal sculpture on your left.\n"
   83	            +"\n"
   84	            +"3 Keep going until you pass the Arbor and Woodstock's and then take "
   85	            +"the slight right sidewalk. This will take you to a long lawn.\n"
   86	            +"\n"
   87	            +"4 Stay on the left side of the lawn and keep going until you pass a bike parking"
   88	            +" lot and are facing a big square planter. Broida Hall will be on your right.";
   89	        
   90	        String BSIFInfo =
   91	            "1 Start out by walking towards the University Center. "
   92	            +"When you get to the University Center, turn left.\n"
   93	            +"\n"
   94	            +"2 Keep going straight until you get to the parking lot and then turn left.\n"
   95	            +"\n"
   96	            +"3 Make your way onto the sidewalk next to UCEN Road.\n"
   97	            +"\n"
   98	            +"4 Continue on UCEN Road. Pass Santa Rosa Residence Hall on your right, the Psychology "
   99	            +"Building on your left, Parking Lot 7 on your left, and the Life Sciences Building on left.\n"
  100	            +"\n"
  101	            +"5 Turn left after the blue and grey Life Sciences Building, and the Biological Sciences "
  102	            + "Instructional Facility will be on the left.";
  103	        
  104	        String GIRVInfo =
  105	            "1 Start out by walking away from the University Center towards the Women's Center. "
  106	            +"Cross the bikepath and get on the sidewalk.\n"
  107	            +"\n"
  108	            +"2 When you get to the sidewalk, turn right and continue on the sidewalk until you see the building on your left. "
  109	            +"You can also turn left at the red metal sculpture and there is another entrance on that side of the building.\n"; 
  110	        
  111	        String HSSBInfo =  
  112	            "1 Start out by walking away from the University Center towards the Women's Center. "







2012-03-14 19:08              src/thegui/TheGUI.java              Page 3


  113	            +"Cross the bikepath and get on the sidewalk.\n"
  114	            +"\n"
  115	            +"2 When you get to the sidewalk, turn left and continue on the sidewalk for about 100 feet. It will be on your right.";
  116	            
  117		String HFHInfo =
  118	            "1 Start out by walking away from the University Center and towards the Women's Center. Find the sidewalk and turn left.\n"
  119	            +"\n"
  120	            +"2 Continue until you get to the library and walk up the steps and through the walkway next to the library.\n"
  121	            +"\n"
  122	            +"3 When you leave this walkway keep going straight until you cross the bike path and find the parking lot.\n"
  123	            +"\n"
  124	            +"4 Now, turn left and follow the bikepath that will be on your left. When the bike path turns right, follow it. "
  125	            +"Broida Hall will be on your left and Webb Hall will be on your right.\n"
  126	            +"\n"
  127	            +"5 Harold Frank Hall will be straight ahead. You will cross the bike path again and be right in front of it.";
  128	       
  129	        String KERRInfo =
  130	            "1 Start out by walking away from the University Center towards the Women's Center. "
  131	            +"Cross the bikepath and get on the sidewalk.\n"
  132	            +"\n"
  133	            +"2 When you get to the sidewalk, turn right and continue on the sidewalk until you see the "
  134	            +"library ahead of you and a red metal sculpture on your left.\n"
  135	            +"\n"
  136	            +"3 Turn left at the red metal sculpture. Continue past the tables and past the Arbor and Woodstocks,"
  137	            +" which will be on your left.\n"
  138	            +"\n"
  139	            +"4 Kerr Hall will be on the left just past Woodstocks. It is a two-story, cement-colored building"
  140	            +" with red accents. If you go too far, you will pass through an enclosed walkway - this is North Hall.";
  141	        
  142	        String LLCHInfo =
  143	            "1 Start by making your way towards the University Center.\n"
  144	            +"\n"
  145	            +"2 Once you get to the University Center make a left.\n"
  146	            +"\n"
  147	            +"3 Continue walking straight until you pass the ATM's on your right and "
  148	            +"see a sidewalk leading to steps on your left.\n"
  149	            +"\n"
  150	            +"4 Take these steps. You will be in the music building. The concert hall is "
  151	            +"through the glass double doors on your left.\n";
  152	                
  153	        String PHELPInfo =
  154	            "1 Start out by walking away from the University Center towards the Women's Center. "
  155	            +"Cross the bikepath and get on the sidewalk.\n"
  156	            +"\n"
  157	            +"2 When you get to the sidewalk, turn right and continue on the sidewalk until "
  158	            +"you are facing the library and have a red metal sculpture on your left.\n"
  159	            +"\n"
  160	            +"3 At the sculpture turn left. You should pass Girvetz Hall and the Arbor.\n"
  161	            +"\n"
  162	            +"4 As you pass the Arbor, you will want to take a sidewalk that turns slightly right. This sidewalk "
  163	            +"should take you diagonally across the lawn, and you should end up with Buchanan Hall on your left.\n"
  164	            +"\n"
  165	            +"5 Phelps Hall is hidden behind Buchannan Hall. Walk just past Buchannan and turn left. "
  166	            +"You will see a building labeled as Gevirtz Graduate School of Education. This building is actually Phelps Hall. "
  167	            +"Walk through the walkway into the courtyard.";
  168	                







2012-03-14 19:08              src/thegui/TheGUI.java              Page 4


  169	        //function to set up the homescreen
  170		public void setUpHomeScreen() throws IOException{
  171	            guiRemoveAll();
  172	            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  173	            thePanel.setLayout(new BoxLayout(thePanel, BoxLayout.X_AXIS));
  174	            thePanel.setSize(600,400);
  175	            leftPanel.setBackground(Color.WHITE);
  176	            leftPanel.setLayout(new BoxLayout(leftPanel, BoxLayout.Y_AXIS));
  177	            leftPanel.setSize(300,200);
  178	            rightPanel.setBackground(Color.WHITE);
  179	            rightPanel.setLayout(new BoxLayout(rightPanel, BoxLayout.Y_AXIS));
  180	            rightPanel.setSize(300,200);
  181	     	 
  182	            //setting size and adding actionlister
  183	            T387.setPreferredSize(new Dimension(100,100));
  184	            T387.addActionListener(new T387Listener());
  185	            T429.setPreferredSize(new Dimension(100,100));
  186	            T429.addActionListener(new T429Listener());
  187	            BRDA.setPreferredSize(new Dimension(100,100));
  188	            BRDA.addActionListener(new BRDAListener());
  189	            BSIF.setPreferredSize(new Dimension(100,100));
  190	            BSIF.addActionListener(new BSIFListener());
  191	            GIRV.setPreferredSize(new Dimension(100,100));
  192	            GIRV.addActionListener(new GIRVListener());
  193	            HSSB.setPreferredSize(new Dimension(100,100));
  194	            HSSB.addActionListener(new HSSBListener());
  195	            HFH.setPreferredSize(new Dimension(100,100));
  196	            HFH.addActionListener(new HFHListener());
  197	            LLCH.setPreferredSize(new Dimension(100,100));
  198	            LLCH.addActionListener(new LLCHListener());
  199	            PHELP.setPreferredSize(new Dimension(100,100));
  200	            PHELP.addActionListener(new PHELPListener());
  201	            KERR.setPreferredSize(new Dimension(100,100));
  202	            KERR.addActionListener(new KERRListener());
  203	
  204	            //adding panels and setting dimensions
  205	            leftPanel.add(T387);
  206	            leftPanel.add(Box.createRigidArea(new Dimension(200,50)));
  207	            leftPanel.add(T429);
  208	            leftPanel.add(Box.createRigidArea(new Dimension(200,50)));
  209	            leftPanel.add(BRDA);
  210	            leftPanel.add(Box.createRigidArea(new Dimension(200,50)));
  211	            leftPanel.add(BSIF);
  212	            leftPanel.add(Box.createRigidArea(new Dimension(200,50)));
  213	            leftPanel.add(GIRV);
  214	            rightPanel.add(HSSB);
  215	            rightPanel.add(Box.createRigidArea(new Dimension(200,50)));
  216	            rightPanel.add(HFH);
  217	            rightPanel.add(Box.createRigidArea(new Dimension(200,50)));
  218	            rightPanel.add(KERR);
  219	            rightPanel.add(Box.createRigidArea(new Dimension(200,50)));
  220	            rightPanel.add(LLCH);
  221	            rightPanel.add(Box.createRigidArea(new Dimension(200,50)));
  222	            rightPanel.add(PHELP);
  223	            thePanel.add(leftPanel);
  224	            thePanel.add(rightPanel);







2012-03-14 19:08              src/thegui/TheGUI.java              Page 5


  225	            frame.getContentPane().add(BorderLayout.CENTER, thePanel);
  226	            frame.setSize(420, 375);
  227	            frame.setBackground(Color.WHITE);
  228	            frame.setVisible(true);
  229		}//end setUpHomeScreen
  230	
  231	 	//function to clear the main frame
  232		public void guiRemoveAll() {
  233	    	////this wipes the frame clean, use before switching panels
  234	            leftPanel.removeAll();
  235	            rightPanel.removeAll();
  236	            bottomPanel.removeAll();
  237	            topPanel.removeAll();
  238	            infoPanel.removeAll();
  239	            thePanel.removeAll();
  240	            newPanel.removeAll();
  241	            frame.getContentPane().removeAll();
  242	            frame.getContentPane().remove(thePanel);
  243	            frame.getContentPane().remove(newPanel);
  244	 	    frame.validate();
  245	            frame.repaint();
  246		}//end guiRemoveAll
  247	
  248		public void T387() throws IOException{
  249	            guiRemoveAll();
  250	            newPanel.setBackground(Color.WHITE);
  251	            newPanel.setLayout(new BoxLayout(newPanel, BoxLayout.Y_AXIS));
  252	            newPanel.setSize(800,625);
  253	            JTextArea T387TA = new JTextArea(T387Info);
  254	            T387TA.setEditable(false);
  255	            T387TA.setLineWrap(true);
  256	            T387TA.setWrapStyleWord(true);
  257	            JScrollPane T387Scroll = new JScrollPane(T387TA);
  258	            T387Scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  259	            T387TA.setPreferredSize(new Dimension(200,600));
  260	            infoPanel.add(T387Scroll);
  261	            bottomPanel.add(cancel);
  262	            newPanel.add(bottomPanel);
  263	            topPanel.add(T387Label);
  264	            cancel.addActionListener(new CancelActionListener());
  265	            java.net.URL T387_URL = getClass().getResource("/387.jpg");
  266	            JLabel T387label = new JLabel(new ImageIcon(T387_URL));
  267	
  268	
  269	            //String Path = "387.jpg";
  270	            //File File = new File(Path);
  271	            //BufferedImage Image = ImageIO.read(File);
  272	            //JLabel label = new JLabel(new ImageIcon(Image));
  273	            newPanel.add(T387label);
  274	            frame.getContentPane().add(BorderLayout.EAST, infoPanel);
  275	            frame.getContentPane().add(BorderLayout.NORTH, topPanel);
  276	            frame.getContentPane().add(BorderLayout.CENTER,newPanel);
  277	            frame.getContentPane().add(BorderLayout.SOUTH, bottomPanel);
  278	            frame.setSize(1000,625);
  279	            frame.setBackground(Color.WHITE);
  280	            frame.setVisible(true);







2012-03-14 19:08              src/thegui/TheGUI.java              Page 6


  281		}//end T387
  282	
  283		public void T429() throws IOException{
  284	            guiRemoveAll();
  285	            newPanel.setBackground(Color.WHITE);
  286	            newPanel.setLayout(new BoxLayout(newPanel, BoxLayout.Y_AXIS));
  287	            newPanel.setSize(800,625);
  288	            JTextArea T429TA = new JTextArea(T429Info);
  289	            T429TA.setEditable(false);
  290	            T429TA.setLineWrap(true);
  291	            T429TA.setWrapStyleWord(true);
  292	            JScrollPane T429Scroll = new JScrollPane(T429TA);
  293	            T429Scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  294	            T429TA.setPreferredSize(new Dimension(200,600));
  295	            infoPanel.add(T429Scroll);
  296	            bottomPanel.add(cancel);
  297	            newPanel.add(bottomPanel);
  298	            topPanel.add(T429Label);
  299	            cancel.addActionListener(new CancelActionListener());
  300	            java.net.URL T429_URL = getClass().getResource("/429.jpg");
  301	            JLabel T429label = new JLabel(new ImageIcon(T429_URL));
  302	
  303	            //String Path = "429.jpg";
  304	            //File File = new File(Path);
  305	            //BufferedImage Image = ImageIO.read(File);
  306	            //JLabel label = new JLabel(new ImageIcon(Image));
  307	            newPanel.add(T429label);
  308	            frame.getContentPane().add(BorderLayout.EAST, infoPanel);
  309	            frame.getContentPane().add(BorderLayout.NORTH, topPanel);
  310	            frame.getContentPane().add(BorderLayout.CENTER,newPanel);
  311	            frame.getContentPane().add(BorderLayout.SOUTH, bottomPanel);
  312	            frame.setSize(1000,625);
  313	            frame.setBackground(Color.WHITE);
  314	            frame.setVisible(true);
  315		}//end T429
  316	    
  317	    	public void BRDA() throws IOException{
  318	            guiRemoveAll();
  319	            newPanel.setBackground(Color.WHITE);
  320	            newPanel.setLayout(new BoxLayout(newPanel, BoxLayout.Y_AXIS));
  321	            newPanel.setSize(800,625);
  322	            JTextArea BRDATA = new JTextArea(BRDAInfo);
  323	            BRDATA.setEditable(false);
  324	            BRDATA.setLineWrap(true);
  325	            BRDATA.setWrapStyleWord(true);
  326	            JScrollPane BRDAScroll = new JScrollPane(BRDATA);
  327	            BRDAScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  328	            BRDATA.setPreferredSize(new Dimension(200,600));
  329	            infoPanel.add(BRDAScroll);
  330	            bottomPanel.add(cancel);
  331	            newPanel.add(bottomPanel);
  332	            topPanel.add(BRDALabel);
  333	            cancel.addActionListener(new CancelActionListener());
  334	            java.net.URL BRDA_URL = getClass().getResource("/BRDA.jpg");
  335	            JLabel BRDAlabel = new JLabel(new ImageIcon(BRDA_URL));
  336	            //String BRDAPath = "BRDA.jpg";







2012-03-14 19:08              src/thegui/TheGUI.java              Page 7


  337	            //File BRDAFile = new File(BRDAPath);
  338	            //BufferedImage BRDAImage = ImageIO.read(BRDAFile);
  339	            //JLabel BRDAlabel = new JLabel(new ImageIcon(BRDAImage));
  340	            newPanel.add(BRDAlabel);
  341	            frame.getContentPane().add(BorderLayout.EAST, infoPanel);
  342	            frame.getContentPane().add(BorderLayout.NORTH, topPanel);
  343	            frame.getContentPane().add(BorderLayout.CENTER,newPanel);
  344	            frame.getContentPane().add(BorderLayout.SOUTH, bottomPanel);
  345	            frame.setSize(1000,625);
  346	            frame.setBackground(Color.WHITE);
  347	            frame.setVisible(true);
  348		}//end BRDA
  349	       
  350		public void BSIF() throws IOException{
  351	            guiRemoveAll();
  352	            newPanel.setBackground(Color.WHITE);
  353	            newPanel.setLayout(new BoxLayout(newPanel, BoxLayout.Y_AXIS));
  354	            newPanel.setSize(800,625);
  355	            JTextArea BSIFTA = new JTextArea(BSIFInfo);
  356	            BSIFTA.setEditable(false);
  357	            BSIFTA.setLineWrap(true);
  358	            BSIFTA.setWrapStyleWord(true);
  359	            JScrollPane BSIFScroll = new JScrollPane(BSIFTA);
  360	            BSIFScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  361	            BSIFTA.setPreferredSize(new Dimension(200,600));
  362	            infoPanel.add(BSIFScroll);
  363	            bottomPanel.add(cancel);
  364	            newPanel.add(bottomPanel);
  365	            topPanel.add(BSIFLabel);
  366	            cancel.addActionListener(new CancelActionListener());
  367	            java.net.URL BSIF_URL = getClass().getResource("/BSIF.jpg");
  368	            JLabel BSIFlabel = new JLabel(new ImageIcon(BSIF_URL));
  369		    //String BSIFPath = "BSIF.jpg";
  370	            //File BSIFFile = new File(BSIFPath);
  371	            //BufferedImage BSIFImage = ImageIO.read(BSIFFile);
  372	            //JLabel BSIFlabel = new JLabel(new ImageIcon(BSIFImage));
  373	            newPanel.add(BSIFlabel);
  374	            frame.getContentPane().add(BorderLayout.EAST, infoPanel);
  375	            frame.getContentPane().add(BorderLayout.NORTH, topPanel);
  376	            frame.getContentPane().add(BorderLayout.CENTER,newPanel);
  377	            frame.getContentPane().add(BorderLayout.SOUTH, bottomPanel);
  378	            frame.setSize(1000,625);
  379	            frame.setBackground(Color.WHITE);
  380	            frame.setVisible(true);
  381		}//end BSIF
  382	       
  383		public void GIRV() throws IOException{
  384	            guiRemoveAll();
  385	            newPanel.setBackground(Color.WHITE);
  386	            newPanel.setLayout(new BoxLayout(newPanel, BoxLayout.Y_AXIS));
  387	            newPanel.setSize(800,625);
  388	            JTextArea GIRVTA = new JTextArea(GIRVInfo);
  389	            GIRVTA.setEditable(false);
  390	            GIRVTA.setLineWrap(true);
  391	            GIRVTA.setWrapStyleWord(true);
  392	            JScrollPane GIRVScroll = new JScrollPane(GIRVTA);







2012-03-14 19:08              src/thegui/TheGUI.java              Page 8


  393	            GIRVScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  394	            GIRVTA.setPreferredSize(new Dimension(200,600));
  395	            infoPanel.add(GIRVScroll);
  396	            bottomPanel.add(cancel);
  397	            newPanel.add(bottomPanel);
  398	            topPanel.add(GIRVLabel);
  399	            cancel.addActionListener(new CancelActionListener());
  400	            java.net.URL GIRV_URL = getClass().getResource("/GIRV.jpg");
  401	            JLabel GIRVlabel = new JLabel(new ImageIcon(GIRV_URL));
  402	            //String GIRVPath = "GIRV.jpg";
  403	            //File GIRVFile = new File(GIRVPath);
  404	            //BufferedImage GIRVImage = ImageIO.read(GIRVFile);
  405	            //JLabel GIRVlabel = new JLabel(new ImageIcon(GIRVImage));
  406	            newPanel.add(GIRVlabel);
  407	            frame.getContentPane().add(BorderLayout.EAST, infoPanel);
  408	            frame.getContentPane().add(BorderLayout.NORTH, topPanel);
  409	            frame.getContentPane().add(BorderLayout.CENTER,newPanel);
  410	            frame.getContentPane().add(BorderLayout.SOUTH, bottomPanel);
  411	            frame.setSize(1000,625);
  412	            frame.setBackground(Color.WHITE);
  413	            frame.setVisible(true);
  414		}//end GIRV
  415	       
  416		public void HFH() throws IOException{
  417	            guiRemoveAll();
  418	            newPanel.setBackground(Color.WHITE);
  419	            newPanel.setLayout(new BoxLayout(newPanel, BoxLayout.Y_AXIS));
  420	            newPanel.setSize(800,625);
  421	            JTextArea HFHTA = new JTextArea(T429Info);
  422	            HFHTA.setEditable(false);
  423	            HFHTA.setLineWrap(true);
  424	            HFHTA.setWrapStyleWord(true);
  425	            JScrollPane HFHScroll = new JScrollPane(HFHTA);
  426	            HFHScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  427	            HFHTA.setPreferredSize(new Dimension(200,600));
  428	            infoPanel.add(HFHScroll);
  429	            bottomPanel.add(cancel);
  430	            newPanel.add(bottomPanel);
  431	            topPanel.add(HFHLabel);
  432	            cancel.addActionListener(new CancelActionListener());
  433	            java.net.URL HFH_URL = getClass().getResource("/HFH.jpg");
  434	            JLabel HFHlabel = new JLabel(new ImageIcon(HFH_URL));
  435	
  436	            //String HFHPath = "HFH.jpg";
  437	            //File HFHFile = new File(HFHPath);
  438	            //BufferedImage HFHImage = ImageIO.read(HFHFile);
  439	            //JLabel HFHlabel = new JLabel(new ImageIcon(HFHImage));
  440	            newPanel.add(HFHlabel);
  441	            frame.getContentPane().add(BorderLayout.EAST, infoPanel);
  442	            frame.getContentPane().add(BorderLayout.NORTH, topPanel);
  443	            frame.getContentPane().add(BorderLayout.CENTER,newPanel);
  444	            frame.getContentPane().add(BorderLayout.SOUTH, bottomPanel);
  445	            frame.setSize(1000,625);
  446	            frame.setBackground(Color.WHITE);
  447	            frame.setVisible(true);
  448		}//end HFH







2012-03-14 19:08              src/thegui/TheGUI.java              Page 9


  449	        
  450		public void HSSB() throws IOException{
  451	            guiRemoveAll();
  452	            newPanel.setBackground(Color.WHITE);
  453	            newPanel.setLayout(new BoxLayout(newPanel, BoxLayout.Y_AXIS));
  454	            newPanel.setSize(800,625);
  455	            JTextArea HSSBTA = new JTextArea(HSSBInfo);
  456	            HSSBTA.setEditable(false);
  457	            HSSBTA.setLineWrap(true);
  458	            HSSBTA.setWrapStyleWord(true);
  459	            JScrollPane HSSBScroll = new JScrollPane(HSSBTA);
  460	            HSSBScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  461	            HSSBTA.setPreferredSize(new Dimension(200,600));
  462	            infoPanel.add(HSSBScroll);
  463	            bottomPanel.add(cancel);
  464	            newPanel.add(bottomPanel);
  465	            topPanel.add(HSSBLabel);
  466	            cancel.addActionListener(new CancelActionListener());
  467	            java.net.URL HSSB_URL = getClass().getResource("/HSSB.jpg");
  468	            JLabel HSSBlabel = new JLabel(new ImageIcon(HSSB_URL));
  469	
  470	            //String HFHPath = "HSSB.jpg";
  471	            //File HFHFile = new File(HFHPath);
  472	            //BufferedImage HFHImage = ImageIO.read(HFHFile);
  473	            //JLabel HFHlabel = new JLabel(new ImageIcon(HFHImage));
  474	            newPanel.add(HSSBlabel);
  475	            frame.getContentPane().add(BorderLayout.EAST, infoPanel);
  476	            frame.getContentPane().add(BorderLayout.NORTH, topPanel);
  477	            frame.getContentPane().add(BorderLayout.CENTER,newPanel);
  478	            frame.getContentPane().add(BorderLayout.SOUTH, bottomPanel);
  479	            frame.setSize(1000,625);
  480	            frame.setBackground(Color.WHITE);
  481	            frame.setVisible(true);
  482		}//end HSSB
  483	    
  484		public void KERR() throws IOException{
  485	            guiRemoveAll();
  486	            newPanel.setBackground(Color.WHITE);
  487	            newPanel.setLayout(new BoxLayout(newPanel, BoxLayout.Y_AXIS));
  488	            newPanel.setSize(800,625);
  489	            JTextArea KERRTA = new JTextArea(KERRInfo);
  490	            KERRTA.setEditable(false);
  491	            KERRTA.setLineWrap(true);
  492	            KERRTA.setWrapStyleWord(true);
  493	            JScrollPane KERRScroll = new JScrollPane(KERRTA);
  494	            KERRScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  495	            KERRTA.setPreferredSize(new Dimension(200,600));
  496	            infoPanel.add(KERRScroll);
  497	            bottomPanel.add(cancel);
  498	            newPanel.add(bottomPanel);
  499	            topPanel.add(KERRLabel);
  500	            cancel.addActionListener(new CancelActionListener());
  501	            java.net.URL KERR_URL = getClass().getResource("/KERR.jpg");
  502	            JLabel KERRlabel = new JLabel(new ImageIcon(KERR_URL));
  503	
  504	            //String KERRPath = "KERR.jpg";







2012-03-14 19:08             src/thegui/TheGUI.java              Page 10


  505	            //File KERRFile = new File(KERRPath);
  506	            //BufferedImage KERRImage = ImageIO.read(KERRFile);
  507	            //JLabel KERRlabel = new JLabel(new ImageIcon(KERRImage));
  508	            newPanel.add(KERRlabel);
  509	            frame.getContentPane().add(BorderLayout.EAST, infoPanel);
  510	            frame.getContentPane().add(BorderLayout.NORTH, topPanel);
  511	            frame.getContentPane().add(BorderLayout.CENTER,newPanel);
  512	            frame.getContentPane().add(BorderLayout.SOUTH, bottomPanel);
  513	            frame.setSize(1000,625);
  514	            frame.setBackground(Color.WHITE);
  515	            frame.setVisible(true);
  516		}//end KERR
  517	    
  518		public void LLCH() throws IOException{
  519	            guiRemoveAll();
  520	            newPanel.setBackground(Color.WHITE);
  521	            newPanel.setLayout(new BoxLayout(newPanel, BoxLayout.Y_AXIS));
  522	            newPanel.setSize(800,625);
  523	            JTextArea LLCHTA = new JTextArea(LLCHInfo);
  524	            LLCHTA.setEditable(false);
  525	            LLCHTA.setLineWrap(true);
  526	            LLCHTA.setWrapStyleWord(true);
  527	            JScrollPane LLCHScroll = new JScrollPane(LLCHTA);
  528	            LLCHScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  529	            LLCHTA.setPreferredSize(new Dimension(200,600));
  530	            infoPanel.add(LLCHScroll);
  531	            bottomPanel.add(cancel);
  532	            newPanel.add(bottomPanel);
  533	            topPanel.add(LLCHLabel);
  534	            cancel.addActionListener(new CancelActionListener());
  535		    java.net.URL LLCH_URL = getClass().getResource("/LLCH.jpg");
  536	            //String LLCHPath = "LLCH.jpg";
  537	            //File LLCHFile = new File(LLCHPath);
  538	            //BufferedImage LLCHImage = ImageIO.read(LLCHFile);
  539	            JLabel LLCHlabel = new JLabel(new ImageIcon(LLCH_URL));
  540	            newPanel.add(LLCHlabel);
  541	            frame.getContentPane().add(BorderLayout.EAST, infoPanel);
  542	            frame.getContentPane().add(BorderLayout.NORTH, topPanel);
  543	            frame.getContentPane().add(BorderLayout.CENTER,newPanel);
  544	            frame.getContentPane().add(BorderLayout.SOUTH, bottomPanel);
  545	            frame.setSize(1000,625);
  546	            frame.setBackground(Color.WHITE);
  547	            frame.setVisible(true);
  548		}//end LLCH
  549	       
  550		public void PHELP() throws IOException{
  551	            guiRemoveAll();
  552	            newPanel.setBackground(Color.WHITE);
  553	            newPanel.setLayout(new BoxLayout(newPanel, BoxLayout.Y_AXIS));
  554	            newPanel.setSize(800,625);
  555	            JTextArea PHELPTA = new JTextArea(PHELPInfo);
  556	            PHELPTA.setEditable(false);
  557	            PHELPTA.setLineWrap(true);
  558	            PHELPTA.setWrapStyleWord(true);
  559	            JScrollPane PHELPScroll = new JScrollPane(PHELPTA);
  560	            PHELPScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);







2012-03-14 19:08             src/thegui/TheGUI.java              Page 11


  561	            PHELPTA.setPreferredSize(new Dimension(200,600));
  562	            infoPanel.add(PHELPScroll);
  563	            bottomPanel.add(cancel);
  564	            newPanel.add(bottomPanel);
  565	            topPanel.add(PHELPLabel);
  566	            cancel.addActionListener(new CancelActionListener());
  567	            java.net.URL PHELP_URL = getClass().getResource("/PHELP.jpg");
  568	            JLabel PHELPlabel = new JLabel(new ImageIcon(PHELP_URL));
  569	
  570	            //String PHELPPath = "PHELP.jpg";
  571	            //File PHELPFile = new File(PHELPPath);
  572	            //BufferedImage PHELPImage = ImageIO.read(PHELPFile);
  573	            //JLabel PHELPlabel = new JLabel(new ImageIcon(PHELPImage));
  574	            newPanel.add(PHELPlabel);
  575	            frame.getContentPane().add(BorderLayout.EAST, infoPanel);
  576	            frame.getContentPane().add(BorderLayout.NORTH, topPanel);
  577	            frame.getContentPane().add(BorderLayout.CENTER,newPanel);
  578	            frame.getContentPane().add(BorderLayout.SOUTH, bottomPanel);
  579	            frame.setSize(1000,625);
  580	            frame.setBackground(Color.WHITE);
  581	            frame.setVisible(true);
  582		}//end PHELP
  583	    
  584		//action listener class for the cancel button
  585		class CancelActionListener implements ActionListener{
  586	            public void actionPerformed(ActionEvent event){
  587	        	try {setUpHomeScreen();}
  588	                catch (IOException ex) {
  589	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);
  590	                    }
  591	            }
  592		}//end CancelActionListener
  593	
  594		class T387Listener implements ActionListener{
  595	            public void actionPerformed(ActionEvent event){
  596	        	try {T387();}
  597	                catch (IOException ex) {
  598	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);
  599	                    }
  600	            }
  601		}//end T387Listener
  602	
  603		class T429Listener implements ActionListener{
  604	            public void actionPerformed(ActionEvent event){
  605	        	try {T429();} 
  606	                catch (IOException ex) {
  607	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);
  608	                    }
  609	            }
  610		}//end T429Listener
  611	
  612		class BRDAListener implements ActionListener{
  613	            public void actionPerformed(ActionEvent event){
  614	        	try {BRDA();}
  615	                catch (IOException ex) {
  616	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);







2012-03-14 19:08             src/thegui/TheGUI.java              Page 12


  617	                    }
  618	            }
  619		}//end BRDAListener
  620	
  621		class BSIFListener implements ActionListener{
  622	            public void actionPerformed(ActionEvent event){
  623	        	try {BSIF();}
  624	                catch (IOException ex) {
  625	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);
  626	                    }
  627	            }
  628		}//end BSIFListener
  629	
  630		class GIRVListener implements ActionListener{
  631	            public void actionPerformed(ActionEvent event){
  632	        	try {GIRV();} 
  633	                catch (IOException ex) {
  634	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);
  635	                    }
  636	            }
  637		}//end GIRVListener
  638	
  639		class HFHListener implements ActionListener{
  640	            public void actionPerformed(ActionEvent event){
  641	        	try {HFH();}
  642	                catch (IOException ex) {
  643	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);
  644	                    }
  645	            }
  646		}//end HFHListener
  647	
  648		class HSSBListener implements ActionListener{
  649	            public void actionPerformed(ActionEvent event){
  650	        	try {HSSB();}
  651	                catch (IOException ex) {
  652	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);
  653	                    }
  654	            }
  655		}//end HSSBListener
  656	
  657		class KERRListener implements ActionListener{
  658	            public void actionPerformed(ActionEvent event){
  659	        	try {KERR();}
  660	                catch (IOException ex) {
  661	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);
  662	                    }
  663	            }
  664		}//end KERRListener
  665	
  666		class LLCHListener implements ActionListener{
  667	            public void actionPerformed(ActionEvent event){
  668	        	try {LLCH();} 
  669	                catch (IOException ex) {
  670	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);
  671	                    }
  672	            }







2012-03-14 19:08             src/thegui/TheGUI.java              Page 13


  673		}//end LLCHListener
  674	
  675		class PHELPListener implements ActionListener{
  676	            public void actionPerformed(ActionEvent event){
  677	        	try {PHELP();}
  678	                catch (IOException ex) {
  679	                    Logger.getLogger(TheGUI.class.getName()).log(Level.SEVERE, null, ex);
  680	                    }
  681	            }
  682		}//end PHELPListener
  683	        
  684	} //end class
  685	
















































