<?xml version="1.0" encoding="utf-8"?>
<project default="compile">

  <!-- build.xml for github.com/UCSB-CS56-Projects/cs56-tutorials-image-zoom
       Original author: Spencer Pao, Bohan Lin  CS56, S13 
     -->

  <property environment="env"/> <!-- load the environment variables --> 
   <property name="webRoot" value="${env.HOME}/public_html/" />
   <property name="webBaseUrl" value="http://www.cs.ucsb.edu/~${env.USER}" />

  <property name="course" value="cs56" />
  <property name="categoryName" value="tutorials" />
  <property name="repoName" value="image_zoom" />
  <property name="mainClass" value="edu.ucsb.cs56.projects.${categoryName}.${repoName}.Run" />
  <property name="ImageLoaderMain" value="edu.ucsb.cs56.projects.${categoryName}.${repoName}.ImageLoaderMain" />
  <property name="RobotTestClass" value="edu.ucsb.cs56.projects.${categoryName}.${repoName}.RobotTest" />

  <property name="projectName" value="${course}_projects__${categoryName}_${repoName}" />
  <property name="projectPath" value="${course}/projects/${categoryName}/${repoName}" />
  <property name="javadocDest" value="${webRoot}/${projectPath}/javadoc" /> 
  <property name="javadocURL" value="${webBaseUrl}/${projectPath}/javadoc" /> 

  <path id="project.class.path">
    <pathelement location="build"/>
    <pathelement location="lib/junit-4.8.2.jar"/>
  </path>

  <!-- **************** COMPILE **************** -->
  <target name="compile" description="compile the code">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source" includeantruntime="false">
      <classpath refid="project.class.path" />
    </javac>
    <copy todir="build/images">
        <fileset dir="images" includes="*.jpg"/>
    </copy>
  </target>

  <!-- **************** RUN **************** -->
  <target name="run" depends="compile" description="run the GUI">
    <java classname="${mainClass}" classpath="build" fork="true" > 
       <jvmarg value="-Xmx1024m"/> <!-- heap space -->
    </java>
  </target>

  <!-- **************** RUN RobotTest**************** -->
  <target name="RobotTest" depends="compile" description="RobotTest the GUI">
    <java classname="${RobotTestClass}" classpath="build" fork="true" > 
       <jvmarg value="-Xmx1024m"/> <!-- heap space -->
    </java>
  </target>

<!-- **************** RUN ImageLoaderMain**************** -->
  <target name="runMVC" depends="compile" description="Run ImageLoaderMain (MVC)">
    <java classname="${ImageLoaderMain}" classpath="build" fork="true" > 
       <jvmarg value="-Xmx1024m"/> <!-- heap space -->
    </java>
  </target>

  <!-- **************** RobotTest **************** -->
  <target name="RobotTest2" depends="compile" description="RobotTest the GUI in 2 separate processes">
    <parallel>
      <sequential>
	<java classname="${mainClass}" classpath="build" fork="true" > 
	  <jvmarg value="-Xmx1024m"/> <!-- heap space -->
	</java>
      </sequential>
      <sequential>
	<java classname="${RobotTestClass}" classpath="build" fork="true" >
	  <jvmarg value="-Xmx1024m"/> <!-- heap space -->
	</java>
      </sequential>
    </parallel>
  </target>

  <!-- **************** CLEAN **************** -->
  <target name="clean">
    <delete dir="build" quiet="true" />
    <delete dir="javadoc" quiet="true" />
  </target>

  <!-- **************** JUNIT **************** -->
  <target name="test" depends="compile" description="run the junit tests">
   <junit haltonerror="no" haltonfailure="no">
       <classpath>
         <pathelement location="lib/junit-4.8.2.jar"/>
         <pathelement location="build" />
       </classpath>

       <batchtest fork="yes">
          <fileset dir="src">
            <!-- this will pick up every class with a name ending in Test -->
            <include name="*Test.java"/>
          </fileset>
       </batchtest>

        <formatter type="plain" usefile="false" /> 
   </junit>
  </target>

<!-- **************** JAVADOC **************** -->
 <target name="javadoc" depends="compile" description="create the javadoc"> 
 
   <delete dir="javadoc" quiet="true" /> 
   <javadoc  destdir="javadoc" author="true" version="true" use="true" >  
      <fileset dir="src" includes="**/*.java"/>  
      <classpath>
          <pathelement location="lib/junit-4.8.2.jar"/>
     </classpath>
   </javadoc>

   <!-- delete the old javadoc -->
   <delete quiet="true" dir="${javadocDest}" /> 

   <!-- copy everything you just made to the javadoc destination, and then make it readable --> 
 
   <copy todir="${javadocDest}" > 
     <fileset dir="javadoc"/> 
   </copy> 
 
   <!-- Note: this only does the chmod command on the 
        javadoc subdirectory and its contents.  You MIGHT have to
	MANUALLY do the chmod on the parent directories.  However,
	you should only need to do that once. --> 
 
   <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" /> 
   <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" /> 
   <echo>Javadoc deployed to ${javadocURL}</echo> 

 </target>

</project>
